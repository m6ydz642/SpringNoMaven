

/********************************/
// 회원
CREATE TABLE customer( 
   customer_id INT NOT NULL AUTO_increment primary key , 
   userid VARCHAR(50) unique,
   userpassword varchar(50) not null,
   username VARCHAR(50) , 
   join_date timestamp,
   active varchar(10) default 'N' // 탈퇴여부
);

create table board (
board_id int AUTO_increment, /*게시글 번호*/
userid VARCHAR(50) not null,
username varchar(50),
subject varchar(1000) not null,
content varchar(5000) not null,
view_count int default 0, 
write_date timestamp
);

create table comment (
board_id int not null, /* 보드 게시판에 게시글 번호 */
comment_number int AUTO_increment, /*댓글 번호 */
userid VARCHAR(50) not null,
username varchar(50),
comment_content varchar(1000) not null,
comment_date timestamp,
delete varchar(10) default 'N'; // 삭제여부
);

alter table comment add FOREIGN KEY(board_id) REFERENCES board ( board_id ) ON delete CASCADE;

/*insert문 */

insert into customer (userid, userpassword, username, join_date) values ('user','1234','언노운', now());
insert into customer (userid, userpassword, username, join_date) values ('1234','1234','언노운_test', now());
insert into customer (userid, userpassword, username, join_date) values ('test','1234','언노운_test', now());

------------------------------------------------------------------------
	INSERT INTO BOARD (username, subject, content, write_date )
	VALUES ('test',  #{subject}, #{content}, now() )
------------------------------------------------------------------------
유저 등급 추가

select * from customer;
// 컬럼 추가, 삭제
// alter table customer drop auth;
// alter table customer add auth varchar(10) default 'USER'; // 유저권한

// alter table customer add active varchar(10) default 'N'; // 탈퇴여부 
// alter table comment add delete varchar(10) default 'N'; // 삭제여부 


/********************************/
alter table comment add delete varchar(2) default 'N'; // 댓글 삭제 여부 

// 유저 등급 테이블 (회원가입시 같이 insert되야 됨)
select * from customer;

create table authlist (
authlist_no int auto_increment, 
userid varchar(20),
auth varchar(10) default 'USER'
);

// 유저 등급 조인 (authlist테이블에도 userid같이 들어가있어야 함 )(회원가입시)
select c.customer_id, c.userid, c.username, a.auth
from customer c, authlist a
where c.userid = a.userid;

// 아직 회원가입이랑 insert부분 같이 안되어있으므로 일단 수동 등록 
insert into authlist (userid) values ('user')
insert into authlist (userid) values ('test')
insert into authlist (userid) values ('1234')

insert into customer (userid, userpassword) values ('user','1234');
insert into customer (userid, userpassword) values ('test','1234');
insert into customer (userid, userpassword) values ('test123','1234');

/***************************************************************/
create table virutal_table  ( // 가상테이블 정보
virutal_no int auto_increment,
virutal_name varchar(100), // 가상테이블 명
virutal_auth varchar(10) // 테이블 권한 (여기서 관리함)
);
alter table board add virutal_name varchar(100) ;  

insert into board (userid, subject, content, virutal_name) values ('1234', '가상테이블 제목', '가상테이블 내용', ‘가상테이블명’);

select b.board_id, v.virutal_name, b.subject, b.content from virutal_table v left join board b
on  v.virutal_name = b.virutal_name where b.board_id = 219 ;
// 219번에 대한 가상테이블 게시글 조회 (게시글 클릭)

select  b.board_id, v.virutal_name, b.subject, b.content, v.auth from virutal_table v , board b
where v.virutal_name = b.virutal_name;
// 가상테이블 게시글 전체 조회

select * from comment where board_id = 219; // 가상테이블 댓글 조회 (board_id가 같이 되어있어서 그냥 됨) 

*********************************************************************/

