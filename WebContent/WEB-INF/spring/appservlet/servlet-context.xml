<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/error/**" location="/error/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	 <!-- <jdbc:embedded-database id="dataSource" type="H2">
	    <jdbc:script location="classpath:sql/*.sql" />
  	 </jdbc:embedded-database> -->
	
	<!-- START : H2 DB 연계 설정 --> 
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <beans:property name="driverClassName" value="org.h2.Driver"/>
	    <beans:property name="url" value="jdbc:h2:tcp://localhost/~/test"/>
	    <beans:property name="username" value="joon"/>
	    <beans:property name="password" value="1234"/>
    </beans:bean>  
	  
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <beans:property name="dataSource" ref="dataSource"/>
	  <beans:property name="transactionFactory">
	    <beans:bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
      </beans:property>
	  <beans:property name="configLocation" value="classpath:config/mybatis/SqlMapConfig.xml"/>
	  <beans:property name="mapperLocations">
	     <beans:list>
	       <beans:value>classpath:mapper/*.xml</beans:value>
	     </beans:list>
	   </beans:property>
    </beans:bean>
	
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	   <beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
	<!-- END : H2 DB연계설정 -->
	
	<!-- START : 트랜잭션관리 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- END : 트랜잭션관리 -->
	
	<!-- Annotation 스캔,해석 -->
	<context:component-scan base-package="project.rasp" />
	

  
   <!-- mybatis mapper auto scanning -->
   <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <beans:property name="basePackage" value="project.rasp.mapper" />
   </beans:bean>
	
</beans:beans>
