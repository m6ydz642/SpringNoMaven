<?xml version="1.0" encoding="UTF-8" ?>
  <!DOCTYPE mapper
          PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
          "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="project.rasp.mapper.BoardMapper">
	  
	  <!-- 검색 기능 -->
	     <select id="SearchContentList" resultType="Board" parameterType="string">
	   <!-- id값은 usermapper에서 지정한 인터페이스 타입임 -->
	   select * from board where subject like '%${search}%' 
	   or subject like '%${search}%';
	  </select>
	  
	  
	    <select id="BackUpData"  resultType="Board" parameterType="Board">
	   <!-- 데이터백업  -->
	  select * from board;
	    </select>
	    
	    
	  <select id="CommentCount"  resultType="int" parameterType="int">
	   <!-- 댓글 갯수 -->
	  select count(*) from comment where board_id = #{board_id};
	    </select>
	    
	  
	  
	   <update id="UpdateViewCount" parameterType="int" >
	   <!-- id값은 usermapper에서 지정한 인터페이스 타입임 -->
	   update board set view_count = view_count + 1
	   where board_id = #{board_id}
	  </update>
	  
	  	  <!-- 글수정시 작성자 검증 -->
	   <select id="UpdateValidationContent" parameterType="map" resultType="boolean">
	   <!-- id값은 usermapper에서 지정한 인터페이스 타입임 -->
	   select * from board where userid =  #{userid} and board_id = #{board_id}
	  </select>
	  
	   <select id="Content" resultType="Board" parameterType="int" >
	   <!-- 글작성 -->
	  select * from board where board_id = #{board_id}
	    </select>
	  
	  <!-- 그냥 /board로 접속했을때-->
	   <select id="getContentlist" resultType="Board">
	   <!-- id값은 usermapper에서 지정한 인터페이스 타입임 -->
	   select * from board order by board.board_id desc limit 0,5
	  </select>
	  
	  <!-- 더보기 버튼 이후 페이징 처리 -->
	   <select id="getContentMorelist" resultType="Board" parameterType="int"> <!-- 게시글이라서 반환타입은 board -->
	   <!-- id값은 usermapper에서 지정한 인터페이스 타입임 -->
	   select * from board order by board.board_id desc limit #{count},#{numberOfRequests}
	  </select>
	  

	  
	  
	  <select id="Comment" resultType="Comment" parameterType="int">
	   <!-- 댓글 조회 -->
	 select * from comment 
	 where board_id = #{board_id} order by comment.comment_number desc 
	    </select>

	<!-- 댓글 수정 -->
	<update id="CommentUpdate" parameterType="map">
		<!-- 댓글 조회 -->
		update comment 
		set comment_content = #{comment_content}
		where comment_number = #{comment_number} and userid = #{userid};

	</update>
	
	<!-- 댓글 삭제 (삭제 안하고 조회에서 제외처리하는 방식)-->
	<update id="CommentDelete" parameterType="map">
		<!-- 댓글 조회 -->
		update comment 
		set delete = 'Y' 
		where comment_number = #{comment_number} and userid = #{userid};

	</update>
	    

 <insert id="WriteContent" parameterType="map"> 
 <!--   keyProperty="id" -->
	   <!-- 글쓰기-->
	
	INSERT INTO BOARD (userid, subject, content, write_date )
	VALUES (#{userid},  #{subject}, #{content}, now() )
	    </insert>
	    <!-- username이 null이라서 잠시 임의로 채움 -->
	    
	    
	     <insert id="WriteComment" parameterType="map"> 
 <!--   keyProperty="id" -->
	   <!-- 댓글 작성 -->
	
	INSERT INTO COMMENT (board_id, userid, comment_content , comment_date )
	VALUES ( #{board_id}, #{userid},  #{comment_content}, now() )
	    </insert>
	    
	    
	    
	<delete id="DeleteContent" parameterType="int" > 
	delete from board where board_id = #{board_id} 
	</delete>
	
	
	<update id="UpdateContent" parameterType="map" > 
	update board set subject = #{subject}, content = #{content}
	where board_id = #{board_id}; 
	</update>
	
	<select id="CommentEditSelect" resultType="Comment" parameterType="map">
	   <!-- 댓글 수정요청시 inputbox에 가져오는 용도 -->
	 select * from comment 
	 where  comment_number = #{comment_number} and userid = #{userid}
	 order by comment.comment_number desc 
	    </select>
	    
	    
	    	
	<select id="getVirutalBoard" resultType="Board" parameterType="string">
	<!-- 가상게시판 로딩 -->
	select  b.board_id, v.column_name, b.subject, b.content, v.auth, b.write_date, b.view_count 
	from virutal_table v , board b
where v.column_name = b.column_name and b.column_name = #{column_name};
	    </select>
	    
	<select id="addBoard" resultType="VirutalBoard"  >
	<!-- 유저랑 등급이랑 같이 조인해서 봄, 어드민 매퍼에서 복사해홈 어드민꺼 필요없음 -->
	select column_name from virutal_table;

	    </select>
	
	     <insert id="insertVirutalBoard" parameterType="map"> 
 <!--   keyProperty="id" -->
	   <!-- 댓글 작성 -->
	
	INSERT INTO board (board_id, userid, comment_content , comment_date )
	VALUES ( #{board_id}, #{userid},  #{comment_content}, now() )
	    </insert>
	    
	    
  </mapper>

